//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLiCaPhe.BangLuongService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BangLuongService.IBangLuongService")]
    public interface IBangLuongService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBangLuongService/DoWork", ReplyAction="http://tempuri.org/IBangLuongService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBangLuongService/DoWork", ReplyAction="http://tempuri.org/IBangLuongService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBangLuongService/layChucVu", ReplyAction="http://tempuri.org/IBangLuongService/layChucVuResponse")]
        string layChucVu(string maNV);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBangLuongService/layChucVu", ReplyAction="http://tempuri.org/IBangLuongService/layChucVuResponse")]
        System.Threading.Tasks.Task<string> layChucVuAsync(string maNV);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBangLuongService/layGioLam", ReplyAction="http://tempuri.org/IBangLuongService/layGioLamResponse")]
        string layGioLam(string maNV, int thang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBangLuongService/layGioLam", ReplyAction="http://tempuri.org/IBangLuongService/layGioLamResponse")]
        System.Threading.Tasks.Task<string> layGioLamAsync(string maNV, int thang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBangLuongService/kiemTraBangLuong", ReplyAction="http://tempuri.org/IBangLuongService/kiemTraBangLuongResponse")]
        bool kiemTraBangLuong(int thang, string maNV);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBangLuongService/kiemTraBangLuong", ReplyAction="http://tempuri.org/IBangLuongService/kiemTraBangLuongResponse")]
        System.Threading.Tasks.Task<bool> kiemTraBangLuongAsync(int thang, string maNV);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBangLuongService/ThemBangLuong", ReplyAction="http://tempuri.org/IBangLuongService/ThemBangLuongResponse")]
        bool ThemBangLuong(DTO_QLCP.BangLuong bl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBangLuongService/ThemBangLuong", ReplyAction="http://tempuri.org/IBangLuongService/ThemBangLuongResponse")]
        System.Threading.Tasks.Task<bool> ThemBangLuongAsync(DTO_QLCP.BangLuong bl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBangLuongService/SuaBangLuong", ReplyAction="http://tempuri.org/IBangLuongService/SuaBangLuongResponse")]
        bool SuaBangLuong(DTO_QLCP.BangLuong bl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBangLuongService/SuaBangLuong", ReplyAction="http://tempuri.org/IBangLuongService/SuaBangLuongResponse")]
        System.Threading.Tasks.Task<bool> SuaBangLuongAsync(DTO_QLCP.BangLuong bl);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBangLuongServiceChannel : QuanLiCaPhe.BangLuongService.IBangLuongService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BangLuongServiceClient : System.ServiceModel.ClientBase<QuanLiCaPhe.BangLuongService.IBangLuongService>, QuanLiCaPhe.BangLuongService.IBangLuongService {
        
        public BangLuongServiceClient() {
        }
        
        public BangLuongServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BangLuongServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BangLuongServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BangLuongServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string layChucVu(string maNV) {
            return base.Channel.layChucVu(maNV);
        }
        
        public System.Threading.Tasks.Task<string> layChucVuAsync(string maNV) {
            return base.Channel.layChucVuAsync(maNV);
        }
        
        public string layGioLam(string maNV, int thang) {
            return base.Channel.layGioLam(maNV, thang);
        }
        
        public System.Threading.Tasks.Task<string> layGioLamAsync(string maNV, int thang) {
            return base.Channel.layGioLamAsync(maNV, thang);
        }
        
        public bool kiemTraBangLuong(int thang, string maNV) {
            return base.Channel.kiemTraBangLuong(thang, maNV);
        }
        
        public System.Threading.Tasks.Task<bool> kiemTraBangLuongAsync(int thang, string maNV) {
            return base.Channel.kiemTraBangLuongAsync(thang, maNV);
        }
        
        public bool ThemBangLuong(DTO_QLCP.BangLuong bl) {
            return base.Channel.ThemBangLuong(bl);
        }
        
        public System.Threading.Tasks.Task<bool> ThemBangLuongAsync(DTO_QLCP.BangLuong bl) {
            return base.Channel.ThemBangLuongAsync(bl);
        }
        
        public bool SuaBangLuong(DTO_QLCP.BangLuong bl) {
            return base.Channel.SuaBangLuong(bl);
        }
        
        public System.Threading.Tasks.Task<bool> SuaBangLuongAsync(DTO_QLCP.BangLuong bl) {
            return base.Channel.SuaBangLuongAsync(bl);
        }
    }
}
