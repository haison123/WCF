//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLiCaPhe.UserService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserService.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DoWork", ReplyAction="http://tempuri.org/IUserService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DoWork", ReplyAction="http://tempuri.org/IUserService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/kiemTraLogin", ReplyAction="http://tempuri.org/IUserService/kiemTraLoginResponse")]
        bool kiemTraLogin(string user, string matkhau);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/kiemTraLogin", ReplyAction="http://tempuri.org/IUserService/kiemTraLoginResponse")]
        System.Threading.Tasks.Task<bool> kiemTraLoginAsync(string user, string matkhau);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/doiPass", ReplyAction="http://tempuri.org/IUserService/doiPassResponse")]
        bool doiPass(DTO_QLCP.User us);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/doiPass", ReplyAction="http://tempuri.org/IUserService/doiPassResponse")]
        System.Threading.Tasks.Task<bool> doiPassAsync(DTO_QLCP.User us);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : QuanLiCaPhe.UserService.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<QuanLiCaPhe.UserService.IUserService>, QuanLiCaPhe.UserService.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public bool kiemTraLogin(string user, string matkhau) {
            return base.Channel.kiemTraLogin(user, matkhau);
        }
        
        public System.Threading.Tasks.Task<bool> kiemTraLoginAsync(string user, string matkhau) {
            return base.Channel.kiemTraLoginAsync(user, matkhau);
        }
        
        public bool doiPass(DTO_QLCP.User us) {
            return base.Channel.doiPass(us);
        }
        
        public System.Threading.Tasks.Task<bool> doiPassAsync(DTO_QLCP.User us) {
            return base.Channel.doiPassAsync(us);
        }
    }
}
